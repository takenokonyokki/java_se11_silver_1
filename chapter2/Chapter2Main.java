import java.util.*;
public class Chapter2Main {
	public static void main(String[] args) {
		//整数リテラル
		int a = 267; //10進数(0～9までの全ての数字を用いて表現)
		int b = 0413; //8進数(数値の頭に0を付ける。0～7までの数字を用いて表現)
		int c = 0x10B; //16進数(数値の頭に0xまたは0Xを付ける。0～9、a～fを用いて表現)
		int d = 0b100001011; //2進数(数値の頭に0bまたは0Bを付ける。0と1だけで表現)
		//int e = 0827; //8進数(数値の頭に0を付ける。0～7までの数字を用いて表現。8が使用されているのでコンパイルエラーになる)
		
		
		//アンダースコアを使った整数リテラル
		//リテラルの先頭と末尾には記述できない
		//記号の前後には記述できない
		int f = 123_456_789;
		int g = 5_______2;
		//int h = _123_456_789; //コンパイルエラー
		//int i = 123_456_789_; //コンパイルエラー
		//float j = 3_.1415F; //コンパイルエラー
		//long k = 999_99_9999_L; //コンパイルエラー
		byte l = 0b0_1;
		int m = 0_52;
		//int n = 0x_52; //コンパイルエラー
		
		
		//char型の変数の初期化
		//シングルクォーテーションで括った文字(文字リテラル)
		//シングルクォーテーションで括った「¥u」から始まるUnicode番号(文字リテラル)
		//0～65535までの数値(数値リテラル)
		//char o = "a"; //コンパイルエラー
		//char p = 'abc'; //コンパイルエラー
		char q = 89;
		//char r = null; //コンパイルエラー
		System.out.println(q);
		
		
		//識別子の命名規則　　識別子：変数やメソッド、クラスなどの名前のこと
		//予約語を識別子として使うことはできない
		//使える記号は、アンダースコア「_」と通貨記号のみ
		//数字からは始めてはいけない(2文字目以降であれば使用可)
		int $a = 100;
		int b_ = 200;
		int _0 = 300;
		//int ${d} = 400; //コンパイルエラー
		//int g.a = 700; //コンパイルエラー
		
		
		//varを使った変数宣言
		//変数宣言時のデータ型を推論する機能(ローカル変数の型推論)
		//varを使った型推論は、コンパイル時にコンパイラが代入演算子「=」の右辺から変数のデータ型を推論し、そのデータ型に置き換える機能
//		var s; //コンパイルエラー
//		var t = null; //コンパイルエラー
//		var u = () -> {}; //コンパイルエラー
//		var v = {1, 2, 3}; //コンパイルエラー
		var w = new ArrayList<>();
		
		int val = 7;
		boolean flg = true;
		//do..while文：指定した条件式が真となる間は回数を決めずに処理を繰り返す。for文やwhile文と異なり、必ず1回は繰り返し処理が行われる。
		if (flg == true) { //flgがtrueであれば
			do {
				System.out.println(val); //繰り返しの中で実行される処理
			} while (val > 10); //条件式(valが10以上であれば)
		}
	}
}